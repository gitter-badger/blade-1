{"name":"Blade","tagline":"a lightweight Java web framework,reverse your code!","body":"# Blade Web Framework\r\n\r\n新一代`javaweb`开发引擎\r\n\r\n##      \t目录\r\n\r\n*\t[特性](#特性)\r\n*\t[快速上手](#快速上手)\r\n*\t[框架语法](#框架语法)\r\n*\t[下载](#下载)\r\n*\t[文档](#doc)\r\n*\t[联系我](#联系我)\r\n*\t[更新日志](#更新日志)\r\n*\t[授权协议](#授权协议)\r\n\r\n##\t特性\r\n\r\n1.\t性能卓越，更简洁的MVC设计\r\n2.\tRestful风格API路由\r\n3.\t注解+正则拦截器\r\n4.\t微内核IOC容器\r\n5.\t实用工具类\r\n6.\t模板引擎支持\r\n7.\t支持JDK1.6+\r\n8.\t内置Jetty启动\r\n\r\n## 快速上手\r\n\r\n第一步、用maven构建一个webapp，加入blade的依赖\r\n\r\n```xml\r\n<dependency>\r\n\t<groupId>com.bladejava</groupId>\r\n\t<artifactId>blade</artifactId>\r\n\t<version>1.0</version>\r\n</dependency>\r\n```\r\n\t\r\n第二步、在`web.xml`中配置Blade核心过滤器并设置你的初始化类\r\n\t\r\n```xml\r\n<web-app>\r\n\t<display-name>Archetype Created Web Application</display-name>\r\n\t<filter>\r\n\t\t<filter-name>BladeFilter</filter-name>\r\n\t\t<filter-class>blade.BladeFilter</filter-class>\r\n\t\t<init-param>\r\n\t\t\t<param-name>applicationClass</param-name>\r\n\t\t\t<param-value>blade.sample.App</param-value>\r\n\t\t</init-param>\r\n\t</filter>\r\n\t\r\n\t<filter-mapping>\r\n\t\t<filter-name>BladeFilter</filter-name>\r\n\t\t<url-pattern>/*</url-pattern>\r\n\t</filter-mapping>\r\n\t\r\n</web-app>\r\n```\r\n\r\n第三步、编写App.java和路由文件，下面是一个示例\r\n\r\n```java\r\npublic class App implements BladeApplication{\r\n\r\n\tLogger logger = Logger.getLogger(App.class);\r\n\t\r\n\t@Override\r\n\tpublic void init() {\r\n\t\t\r\n\t\t// 设置路由、拦截器包所在包\r\n\t\tBlade.defaultRoute(\"blade.sample\");\r\n\t}\r\n\t\r\n}\r\n```\r\n\t\r\n```java\r\n@Path\r\npublic class Hello {\r\n\t\r\n\t@Route(\"/hello\")\r\n\tpublic String hello() {\r\n\t\tSystem.out.println(\"hello\");\r\n\t\treturn R.render(\"hello.jsp\");\r\n\t}\r\n\t\r\n\t@Route(value = \"/post\", method = HttpMethod.POST)\r\n\tpublic void post() {\r\n\t\tSystem.out.println(\"post\");\r\n\t}\r\n\t\r\n\t@Route(\"/users/:name\")\r\n\tpublic void users(Request request, Response response) {\r\n\t\tSystem.out.println(\"users\");\r\n\t\tString name = request.pathParam(\":name\");\r\n\t\trequest.attribute(\"name\", name);\r\n\t\tR.render(\"/users.jsp\");\r\n\t}\r\n\r\n\t@Route(\"/index\")\r\n\tpublic void index() {\r\n\t\tModelAndView modelAndView = new ModelAndView(\"/index.jsp\");\r\n\t\tmodelAndView.add(\"name\", \"jack\");\r\n\t\tR.render(modelAndView);\r\n\t}\r\n\t\r\n}\r\n```\r\n##\t下载\r\n\r\n* [blade-1.0.jar](http://search.maven.org/remotecontent?filepath=com/bladejava/blade/1.0/blade-1.0.jar) *(65kb)* \r\n* [blade-kit-1.0.0.jar](http://search.maven.org/remotecontent?filepath=com/bladejava/blade-kit/1.0.0/blade-kit-1.0.0.jar) *(39kb)*\r\n\r\n## 文档\r\n\r\n* 中文指南：[http://bladejava.com/doc/cn](http://bladejava.com/doc/cn)\r\n* Java Doc：[http://bladejava.com/doc/api](http://bladejava.com/doc/api)\r\n\r\n## 联系我\r\n\r\nmail：biezhi.me@gmail.com\r\n\r\nqq群：[1013565](http://shang.qq.com/wpa/qunwpa?idkey=932642920a5c0ef5f1ae902723c4f168c58ea63f3cef1139e30d68145d3b5b2f)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}